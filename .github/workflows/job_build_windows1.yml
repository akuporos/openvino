on:
  workflow_call:
    inputs:
      runner:
        description: 'Machine on which the tests would run'
        type: string
        required: true
      affected-components:
        description: 'Components that are affected by changes in the commit defined by the Smart CI Action'
        type: string
        required: true 
      target-branch:
        description: 'Target branch for the build'
        type: string
        required: true

permissions: read-all

env:
  PIP_CACHE_PATH: "C:\\mount\\caches\\pip\\win"
  PYTHON_VERSION: '3.13.4'

jobs:
  Build:
    timeout-minutes: 180
    defaults:
      run:
        shell: pwsh
    runs-on: ${{ inputs.runner }}
    env:
      CMAKE_BUILD_TYPE: ${{ inputs.build-type }}
      CMAKE_CXX_COMPILER_LAUNCHER: ccache
      CMAKE_C_COMPILER_LAUNCHER: ccache
      CCACHE_REMOTE_DIR: C:\\mount\\caches\\ccache\\windows2022_x86_64_${{ inputs.build-type }}\\${{ inputs.target-branch }}
      CCACHE_DIR: ${{ github.workspace }}\\ccache
      CCACHE_MAXSIZE: 3G
      OPENVINO_REPO: "${{ github.workspace }}\\openvino"
      OPENVINO_CONTRIB_REPO: "${{ github.workspace }}\\openvino_contrib"
      INSTALL_DIR: "${{ github.workspace }}\\openvino_install"
      INSTALL_DIR_JS: "${{ github.workspace }}\\openvino\\src\\bindings\\js\\node\\bin"
      INSTALL_TEST_DIR: "${{ github.workspace }}\\tests_install"
      INSTALL_WHEELS_DIR: "${{ github.workspace }}\\install\\wheels"
      INSTALL_DEV_PACKAGE: "${{ github.workspace }}\\install\\developer_package"
      INSTALL_PDB_DIR: "${{ github.workspace }}\\install_pdb"
      BUILD_DIR: "${{ github.workspace }}\\openvino_build"
      ARTIFACTS_SHARE: "C:\\mount\\build-artifacts"
      MANIFEST_PATH: "${{ github.workspace }}\\manifest.yml"
      PRODUCT_TYPE: 'public_windows_vs2022_${{ inputs.build-type }}'
    steps:
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: ./openvino/.github/actions/setup_python
        with:
          version: ${{ env.PYTHON_VERSION }}
          pip-cache-path: ${{ env.PIP_CACHE_PATH }}
          should-setup-pip-paths: 'true'
          self-hosted-runner: 'true'

      #
      # Print system info
      #

      - name: System info
        uses: ./openvino/.github/actions/system_info

      - name: Download and install ccache
        run: |
          Invoke-WebRequest -Uri 'https://github.com/ccache/ccache/releases/download/v4.9.1/ccache-4.9.1-windows-x86_64.zip' -OutFile 'ccache.zip'
          Expand-Archive -Path 'ccache.zip' -DestinationPath 'C:\temp\ccache'
          Move-Item -Path 'C:\temp\ccache\*' -Destination 'C:\ccache'
          Add-Content -Path $env:GITHUB_PATH -Value "C:\ccache"

      - name: Install build dependencies
        run: |
          Invoke-WebRequest https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -OutFile ninja-win.zip -MaximumRetryCount 10
          Expand-Archive -Force ninja-win.zip
          # Add it to the GitHub Path so it would be available in the subsequent steps
          Add-Content -Path $env:GITHUB_PATH -Value "${{ github.workspace }}/ninja-win"
